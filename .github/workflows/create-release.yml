name: Create Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [android, windows, linux]
        include:
          - platform: android
            export_preset: "Android"
            artifact_path: build/android/game.apk
          - platform: windows
            export_preset: "Windows Desktop"
            artifact_path: build/windows/game.exe
          - platform: linux
            export_preset: "Linux/X11"
            artifact_path: build/linux/game.x86_64
    
    name: 🔨 Build ${{ matrix.platform }}
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.2
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
          
      - name: 🎮 Setup Godot Export Templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/* ~/.local/share/godot/export_templates/
      
      - name: 🔧 Platform Setup
        run: |
          # Criar diretórios de build
          mkdir -p build/${{ matrix.platform }}
          
          # Setup específico para Android
          if [ "${{ matrix.platform }}" = "android" ]; then
            # Criar keystore para debug
            keytool -keyalg RSA -genkeypair -alias androiddebugkey \
              -keypass android -keystore debug.keystore \
              -storepass android -dname "CN=Android Debug,O=Android,C=US" \
              -validity 9999 -deststoretype pkcs12

            # Configurar keystore
            echo "keystore/debug=debug.keystore" >> export_presets.cfg
            echo "keystore/debug_user=androiddebugkey" >> export_presets.cfg
            echo "keystore/debug_password=android" >> export_presets.cfg

            # Setup Android SDK
            apt-get update && apt-get install -y --no-install-recommends \
              openjdk-11-jdk-headless wget unzip

            export ANDROID_HOME=/usr/lib/android-sdk
            export CMDLINE_TOOLS_ROOT=$ANDROID_HOME/cmdline-tools
            export CMDLINE_TOOLS_LATEST=$CMDLINE_TOOLS_ROOT/latest
            
            mkdir -p $CMDLINE_TOOLS_ROOT
            wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
            unzip -q commandlinetools-linux-*_latest.zip
            mv cmdline-tools $CMDLINE_TOOLS_LATEST
            rm commandlinetools-linux-*_latest.zip
            
            export PATH=$PATH:$CMDLINE_TOOLS_LATEST/bin
            yes | sdkmanager --licenses > /dev/null 2>&1 || true
            sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.2"
          fi
      
      - name: 🛠️ Build Game
        run: |
          case "${{ matrix.platform }}" in
            "android")
              godot --headless --verbose --export-debug "${{ matrix.export_preset }}" ${{ matrix.artifact_path }}
              ;;
            "windows"|"linux")
              godot --headless --verbose --export-release "${{ matrix.export_preset }}" ${{ matrix.artifact_path }}
              [ "${{ matrix.platform }}" = "linux" ] && chmod 755 ${{ matrix.artifact_path }}
              ;;
          esac
      
      - name: 📦 Package Build
        if: matrix.platform != 'android'
        run: |
          cd build/${{ matrix.platform }}
          case "${{ matrix.platform }}" in
            "windows")
              zip -9 -r game-windows.zip game.exe *.dll *.pck
              ;;
            "linux")
              zip -9 -r game-linux.zip game.x86_64 *.pck
              ;;
          esac
      
      - name: ⬆️ Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            ${{ matrix.platform == 'android' && matrix.artifact_path || 
            format('build/{0}/game-{0}.zip', matrix.platform) }}
          retention-days: 7

  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: build
    if: success()
    
    steps:
      - name: 📥 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds
          
      - name: 📝 Generate Release Notes
        run: |
          cat > CHANGELOG.md << EOL
          ## 📥 Downloads
          * 📱 Android: game.apk
          * 🖥️ Windows: game-windows.zip
          * 🐧 Linux: game-linux.zip

          ## 📝 Notas da Versão
          ### ✨ Novidades
          EOL
          
      - name: 🎉 Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            builds/android-build/game.apk
            builds/windows-build/game-windows.zip
            builds/linux-build/game-linux.zip
          name: "🎮 Game Release ${{ github.ref_name }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧹 Cleanup
        if: always()
        run: rm -rf ~/.local/share/godot ~/.config/godot android.keystore 2>/dev/null || true
