name: Create Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [android, windows, linux]
        include:
          - platform: android
            export_preset: "Android"
            artifact_path: build/android/game.apk
            needs_zip: false
            extra_setup: true
          - platform: windows
            export_preset: "Windows"
            artifact_path: build/windows/game.exe
            needs_zip: true
            extra_setup: false
          - platform: linux
            export_preset: "Linux"
            artifact_path: build/linux/game.x86_64
            needs_zip: true
            extra_setup: false
    
    name: ${{ matrix.platform }} Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.2
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Setup Export Templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/* ~/.local/share/godot/export_templates/
      
      - name: Android Setup
        if: matrix.platform == 'android'
        run: |
          apt-get update && apt-get install -y openjdk-11-jdk-headless
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          export PATH=$PATH:$JAVA_HOME/bin
      
      - name: Verify Export Presets
        run: |
          if [ ! -f "export_presets.cfg" ]; then
            echo "Error: export_presets.cfg not found!"
            exit 1
          fi
          echo "Found export_presets.cfg"
          cat export_presets.cfg | grep "name="
          
      - name: Build
        run: |
          mkdir -p build/${{ matrix.platform }}
          godot --headless --verbose --export-release "${{ matrix.export_preset }}" ${{ matrix.artifact_path }} || exit 1
      
      - name: Create ZIP
        if: matrix.needs_zip && success()
        run: |
          cd build/${{ matrix.platform }}
          zip -r game-${{ matrix.platform }}.zip . -i "*"
      
      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ${{ matrix.needs_zip && format('build/{0}/game-{0}.zip', matrix.platform) || matrix.artifact_path }}
          retention-days: 7

  verify:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Verification step"
  
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [verify, build]
    if: success()
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds
          
      - name: List Downloads
        run: |
          ls -R builds/
          
      - name: Verify Artifacts
        run: |
          if [ ! -f "builds/android-build/game.apk" ]; then
            echo "Error: Android build missing"
            exit 1
          fi
          if [ ! -f "builds/windows-build/game-windows.zip" ]; then
            echo "Error: Windows build missing"
            exit 1
          fi
          if [ ! -f "builds/linux-build/game-linux.zip" ]; then
            echo "Error: Linux build missing"
            exit 1
          fi
          
      - name: Generate Changelog
        run: |
          echo "# 🎮 Game Release ${{ github.ref_name }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## 📥 Downloads" >> CHANGELOG.md
          echo "* 📱 Android: game.apk" >> CHANGELOG.md
          echo "* 🪟 Windows: game-windows.zip" >> CHANGELOG.md
          echo "* 🐧 Linux: game-linux.zip" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## 📝 Notas da Versão" >> CHANGELOG.md
          echo "### ✨ Novidades" >> CHANGELOG.md
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            builds/android-build/game.apk
            builds/windows-build/game-windows.zip
            builds/linux-build/game-linux.zip
          name: "🎮 Game Release ${{ github.ref_name }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}